{
  "definitions": {
    "Company": {
      "description": "A company of the app",
      "example": {
        "id": 123
      },
      "properties": {
        "id": {
          "description": "Company ID",
          "type": "integer"
        }
      },
      "title": "Company",
      "type": "object"
    },
    "CompanyRequest": {
      "description": "POST body for creating a company",
      "example": {
        "company": {}
      },
      "properties": {
        "company": {
          "$ref": "#/definitions/Company",
          "description": "The company details"
        }
      },
      "title": "CompanyRequest",
      "type": "object"
    },
    "CompanyResponse": {
      "description": "Response schema for single company",
      "properties": {
        "data": {
          "$ref": "#/definitions/Company",
          "description": "The company details"
        }
      },
      "title": "CompanyResponse",
      "type": "object"
    },
    "CompanysResponse": {
      "description": "Response schema for multiple companies",
      "properties": {
        "data": {
          "description": "The companies details",
          "items": {
            "$ref": "#/definitions/Company"
          },
          "type": "array"
        }
      },
      "title": "CompanysReponse",
      "type": "object"
    },
    "Coupon": {
      "description": "A coupon of the app",
      "example": {
        "cost": 42,
        "created_at": "2010-04-17 14:00:00",
        "description": "some description",
        "id": 123,
        "life_time": "2010-04-17 14:00:00"
      },
      "properties": {
        "cost": {
          "description": "Coupon cost",
          "type": "string"
        },
        "description": {
          "description": "Coupon description",
          "type": "string"
        },
        "id": {
          "description": "Coupon ID",
          "type": "integer"
        },
        "life_time": {
          "description": "Coupon life_time",
          "type": "string"
        }
      },
      "title": "Coupon",
      "type": "object"
    },
    "CouponRequest": {
      "description": "POST body for creating a coupon",
      "example": {
        "coupon": {
          "cost": 42,
          "description": "some description",
          "life_time": "2010-04-17 14:00:00"
        }
      },
      "properties": {
        "coupon": {
          "$ref": "#/definitions/Coupon",
          "description": "The coupon details"
        }
      },
      "title": "CouponRequest",
      "type": "object"
    },
    "CouponResponse": {
      "description": "Response schema for single coupon",
      "properties": {
        "data": {
          "$ref": "#/definitions/Coupon",
          "description": "The coupon details"
        }
      },
      "title": "CouponResponse",
      "type": "object"
    },
    "CouponsResponse": {
      "description": "Response schema for multiple coupons",
      "properties": {
        "data": {
          "description": "The coupons details",
          "items": {
            "$ref": "#/definitions/Coupon"
          },
          "type": "array"
        }
      },
      "title": "CouponsReponse",
      "type": "object"
    },
    "HealthData": {
      "description": "A health_data of the app",
      "example": {
        "comment": "some comment",
        "date": {
          "calendar": "Elixir.Calendar.ISO",
          "day": 17,
          "month": 4,
          "year": 2010
        },
        "id": 123,
        "step": 42
      },
      "properties": {
        "comment": {
          "description": "HealthData comment",
          "type": "string"
        },
        "date": {
          "description": "HealthData date",
          "type": "string"
        },
        "id": {
          "description": "HealthData ID",
          "type": "integer"
        },
        "step": {
          "description": "HealthData step",
          "type": "string"
        }
      },
      "title": "HealthData",
      "type": "object"
    },
    "HealthDataRequest": {
      "description": "POST body for creating a health_data",
      "example": {
        "health_data": {
          "comment": "some comment",
          "date": {
            "calendar": "Elixir.Calendar.ISO",
            "day": 17,
            "month": 4,
            "year": 2010
          },
          "step": 42
        }
      },
      "properties": {
        "health_data": {
          "$ref": "#/definitions/HealthData",
          "description": "The health_data details"
        }
      },
      "title": "HealthDataRequest",
      "type": "object"
    },
    "HealthDataResponse": {
      "description": "Response schema for single health_data",
      "properties": {
        "data": {
          "$ref": "#/definitions/HealthData",
          "description": "The health_data details"
        }
      },
      "title": "HealthDataResponse",
      "type": "object"
    },
    "HealthDatasResponse": {
      "description": "Response schema for multiple health_datas",
      "properties": {
        "data": {
          "description": "The health_datas details",
          "items": {
            "$ref": "#/definitions/HealthData"
          },
          "type": "array"
        }
      },
      "title": "HealthDatasReponse",
      "type": "object"
    },
    "Session": {
      "description": "A session of the app",
      "title": "Session",
      "type": "object"
    },
    "User": {
      "description": "A user of the app",
      "example": {
        "id": 123,
        "name": "some name",
        "point": 42,
        "role": "some role"
      },
      "properties": {
        "id": {
          "description": "User ID",
          "type": "integer"
        },
        "name": {
          "description": "User name",
          "type": "string"
        },
        "point": {
          "description": "User point",
          "type": "string"
        },
        "role": {
          "description": "User role",
          "type": "string"
        }
      },
      "title": "User",
      "type": "object"
    },
    "UserRequest": {
      "description": "POST body for creating a user",
      "example": {
        "user": {
          "name": "some name",
          "role": "some role"
        }
      },
      "properties": {
        "user": {
          "$ref": "#/definitions/User",
          "description": "The user details"
        }
      },
      "title": "UserRequest",
      "type": "object"
    },
    "UserResponse": {
      "description": "Response schema for single user",
      "properties": {
        "data": {
          "$ref": "#/definitions/User",
          "description": "The user details"
        }
      },
      "title": "UserResponse",
      "type": "object"
    },
    "UsersResponse": {
      "description": "Response schema for multiple users",
      "properties": {
        "data": {
          "description": "The users details",
          "items": {
            "$ref": "#/definitions/User"
          },
          "type": "array"
        }
      },
      "title": "UsersReponse",
      "type": "object"
    }
  },
  "host": "localhost:4000",
  "info": {
    "title": "back end",
    "version": "1.0"
  },
  "paths": {
    "/api/companies": {
      "get": {
        "description": "List all companies in the database",
        "operationId": "BackendWeb.CompanyController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 1
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanysResponse"
            }
          }
        },
        "summary": "List companies",
        "tags": [
          "Companys"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new company",
        "operationId": "BackendWeb.CompanyController.create",
        "parameters": [
          {
            "description": "The company details",
            "in": "body",
            "name": "company",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyRequest"
            },
            "x-example": {
              "company": {}
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Company created OK",
            "examples": {
              "application/json": {
                "data": {
                  "id": 1
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyResponse"
            }
          }
        },
        "summary": "Create company",
        "tags": [
          "Companys"
        ]
      }
    },
    "/api/companies/{company_id}/users": {
      "get": {
        "description": "List all users in the database",
        "operationId": "BackendWeb.UserController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "id": 1,
                    "name": "some name",
                    "point": 42,
                    "role": "some role"
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/UsersResponse"
            }
          }
        },
        "summary": "List users",
        "tags": [
          "Users"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new user",
        "operationId": "BackendWeb.UserController.create",
        "parameters": [
          {
            "description": "The user details",
            "in": "body",
            "name": "user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            },
            "x-example": {
              "user": {
                "name": "some name",
                "role": "some role"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "User created OK",
            "examples": {
              "application/json": {
                "data": {
                  "id": 1,
                  "name": "some name",
                  "point": 0,
                  "role": "some role"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          }
        },
        "summary": "Create user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/companies/{company_id}/users/{id}": {
      "delete": {
        "description": "Delete a user by ID",
        "operationId": "BackendWeb.UserController.delete",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "responses": {
          "203": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete User",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "description": "Show a user by ID",
        "operationId": "BackendWeb.UserController.show",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 123
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "id": 123,
                  "name": "some name",
                  "point": 42,
                  "role": "some role"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          }
        },
        "summary": "Show User",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update all attributes of a user",
        "operationId": "BackendWeb.UserController.update",
        "parameters": [
          {
            "description": "User ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          },
          {
            "description": "The user details",
            "in": "body",
            "name": "user",
            "required": false,
            "schema": {
              "$ref": "#/definitions/UserRequest"
            },
            "x-example": {
              "user": {
                "name": "some name",
                "point": 42,
                "role": "some role"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "examples": {
              "application/json": {
                "data": {
                  "id": 3,
                  "name": "some name",
                  "point": 42,
                  "role": "some role"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/UserResponse"
            }
          }
        },
        "summary": "Update user",
        "tags": [
          "Users"
        ]
      }
    },
    "/api/companies/{id}": {
      "delete": {
        "description": "Delete a company by ID",
        "operationId": "BackendWeb.CompanyController.delete",
        "parameters": [
          {
            "description": "Company ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "responses": {
          "203": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete Company",
        "tags": [
          "Companys"
        ]
      },
      "get": {
        "description": "Show a company by ID",
        "operationId": "BackendWeb.CompanyController.show",
        "parameters": [
          {
            "description": "Company ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 123
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "id": 123
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyResponse"
            }
          }
        },
        "summary": "Show Company",
        "tags": [
          "Companys"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update all attributes of a company",
        "operationId": "BackendWeb.CompanyController.update",
        "parameters": [
          {
            "description": "Company ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          },
          {
            "description": "The company details",
            "in": "body",
            "name": "company",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CompanyRequest"
            },
            "x-example": {
              "company": {}
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "examples": {
              "application/json": {
                "data": {
                  "id": 3
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CompanyResponse"
            }
          }
        },
        "summary": "Update company",
        "tags": [
          "Companys"
        ]
      }
    },
    "/api/coupons": {
      "get": {
        "description": "List all coupons in the database",
        "operationId": "BackendWeb.CouponController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "cost": 42,
                    "created_at": "2010-04-17 14:00:00",
                    "description": "some description",
                    "id": 1,
                    "life_time": "2010-04-17 14:00:00"
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/CouponsResponse"
            }
          }
        },
        "summary": "List coupons",
        "tags": [
          "Coupons"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new coupon",
        "operationId": "BackendWeb.CouponController.create",
        "parameters": [
          {
            "description": "The coupon details",
            "in": "body",
            "name": "coupon",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CouponRequest"
            },
            "x-example": {
              "coupon": {
                "cost": 42,
                "description": "some description",
                "life_time": "2010-04-17 14:00:00"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Coupon created OK",
            "examples": {
              "application/json": {
                "data": {
                  "cost": 42,
                  "created_at": "2010-04-17 14:00:00",
                  "description": "some description",
                  "id": 1,
                  "life_time": "2010-04-17 14:00:00"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        },
        "summary": "Create coupon",
        "tags": [
          "Coupons"
        ]
      }
    },
    "/api/coupons/{id}": {
      "delete": {
        "description": "Delete a coupon by ID",
        "operationId": "BackendWeb.CouponController.delete",
        "parameters": [
          {
            "description": "Coupon ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "responses": {
          "203": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete Coupon",
        "tags": [
          "Coupons"
        ]
      },
      "get": {
        "description": "Show a coupon by ID",
        "operationId": "BackendWeb.CouponController.show",
        "parameters": [
          {
            "description": "Coupon ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 123
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "cost": 42,
                  "created_at": "2010-04-17 14:00:00",
                  "description": "some description",
                  "id": 123,
                  "life_time": "2010-04-17 14:00:00"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        },
        "summary": "Show Coupon",
        "tags": [
          "Coupons"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update all attributes of a coupon",
        "operationId": "BackendWeb.CouponController.update",
        "parameters": [
          {
            "description": "Coupon ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          },
          {
            "description": "The coupon details",
            "in": "body",
            "name": "coupon",
            "required": false,
            "schema": {
              "$ref": "#/definitions/CouponRequest"
            },
            "x-example": {
              "coupon": {
                "cost": 42,
                "description": "some description",
                "life_time": "2010-04-17 14:00:00"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "examples": {
              "application/json": {
                "data": {
                  "cost": 42,
                  "created_at": "2010-04-17 14:00:00",
                  "description": "some description",
                  "id": 3,
                  "life_time": "2010-04-17 14:00:00"
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/CouponResponse"
            }
          }
        },
        "summary": "Update coupon",
        "tags": [
          "Coupons"
        ]
      }
    },
    "/api/health_datas": {
      "get": {
        "description": "List all health_datas in the database",
        "operationId": "BackendWeb.HealthDataController.index",
        "parameters": [],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": [
                  {
                    "comment": "some comment",
                    "date": {
                      "calendar": "Elixir.Calendar.ISO",
                      "day": 17,
                      "month": 4,
                      "year": 2010
                    },
                    "id": 1,
                    "step": 42
                  }
                ]
              }
            },
            "schema": {
              "$ref": "#/definitions/HealthDatasResponse"
            }
          }
        },
        "summary": "List health_datas",
        "tags": [
          "HealthDatas"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Creates a new health_data",
        "operationId": "BackendWeb.HealthDataController.create",
        "parameters": [
          {
            "description": "The health_data details",
            "in": "body",
            "name": "health_data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HealthDataRequest"
            },
            "x-example": {
              "health_data": {
                "comment": "some comment",
                "date": {
                  "calendar": "Elixir.Calendar.ISO",
                  "day": 17,
                  "month": 4,
                  "year": 2010
                },
                "step": 42
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "HealthData created OK",
            "examples": {
              "application/json": {
                "data": {
                  "comment": "some comment",
                  "date": {
                    "calendar": "Elixir.Calendar.ISO",
                    "day": 17,
                    "month": 4,
                    "year": 2010
                  },
                  "id": 1,
                  "step": 42
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/HealthDataResponse"
            }
          }
        },
        "summary": "Create health_data",
        "tags": [
          "HealthDatas"
        ]
      }
    },
    "/api/health_datas/{id}": {
      "delete": {
        "description": "Delete a health_data by ID",
        "operationId": "BackendWeb.HealthDataController.delete",
        "parameters": [
          {
            "description": "HealthData ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          }
        ],
        "responses": {
          "203": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "Delete HealthData",
        "tags": [
          "HealthDatas"
        ]
      },
      "get": {
        "description": "Show a health_data by ID",
        "operationId": "BackendWeb.HealthDataController.show",
        "parameters": [
          {
            "description": "HealthData ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 123
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "examples": {
              "application/json": {
                "data": {
                  "comment": "some comment",
                  "date": {
                    "calendar": "Elixir.Calendar.ISO",
                    "day": 17,
                    "month": 4,
                    "year": 2010
                  },
                  "id": 123,
                  "step": 42
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/HealthDataResponse"
            }
          }
        },
        "summary": "Show HealthData",
        "tags": [
          "HealthDatas"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Update all attributes of a health_data",
        "operationId": "BackendWeb.HealthDataController.update",
        "parameters": [
          {
            "description": "HealthData ID",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer",
            "x-example": 3
          },
          {
            "description": "The health_data details",
            "in": "body",
            "name": "health_data",
            "required": false,
            "schema": {
              "$ref": "#/definitions/HealthDataRequest"
            },
            "x-example": {
              "health_data": {
                "comment": "some comment",
                "date": {
                  "calendar": "Elixir.Calendar.ISO",
                  "day": 17,
                  "month": 4,
                  "year": 2010
                },
                "step": 42
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Updated Successfully",
            "examples": {
              "application/json": {
                "data": {
                  "comment": "some comment",
                  "date": {
                    "calendar": "Elixir.Calendar.ISO",
                    "day": 17,
                    "month": 4,
                    "year": 2010
                  },
                  "id": 3,
                  "step": 42
                }
              }
            },
            "schema": {
              "$ref": "#/definitions/HealthDataResponse"
            }
          }
        },
        "summary": "Update health_data",
        "tags": [
          "HealthDatas"
        ]
      }
    },
    "/api/login": {
      "post": {
        "description": "login with slack token. in order to authorize, you need to add response token to authorization Bearer header.",
        "operationId": "BackendWeb.SessionController.login",
        "parameters": [
          {
            "description": "The slack token",
            "in": "body",
            "name": "token",
            "required": false,
            "schema": "some slack token",
            "x-example": {
              "token": "some slack token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "properties": {
                "token": {
                  "description": "jwt token",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "login",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/api/logout": {
      "delete": {
        "description": "logout",
        "operationId": "BackendWeb.SessionController.logout",
        "parameters": [],
        "responses": {
          "203": {
            "description": "No Content - Deleted Successfully"
          }
        },
        "summary": "logout",
        "tags": [
          "Sessions"
        ]
      }
    }
  },
  "swagger": "2.0"
}